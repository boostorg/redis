services:
  redis-standalone:
    container_name: redis-standalone
    image: ${SERVER_IMAGE}
    network_mode: host
    entrypoint: "/docker/entrypoint.sh"
    volumes:
      - ./docker:/docker
      - /tmp/redis-socks:/tmp/redis-socks

  redis-master:
    container_name: redis-master
    image: ${SERVER_IMAGE}
    network_mode: host
    command:
      [
        "redis-server",
        "--replica-announce-ip", "localhost",
        "--protected-mode", "no",
        "--port", "6380",
        "--tls-port", "16380",
        "--tls-cert-file", "/docker/tls/server.crt",
        "--tls-key-file", "/docker/tls/server.key",
        "--tls-ca-cert-file", "/docker/tls/ca.crt",
        "--tls-auth-clients", "no",
      ]
    volumes:
      - ./docker:/docker


  redis-replica-1:
    container_name: redis-replica-1
    image: ${SERVER_IMAGE}
    network_mode: host
    command:
      [
        "redis-server",
        "--replica-announce-ip", "localhost",
        "--replicaof", "localhost", "6380",
        "--protected-mode", "no",
        "--port", "6381",
        "--tls-port", "16381",
        "--tls-cert-file", "/docker/tls/server.crt",
        "--tls-key-file", "/docker/tls/server.key",
        "--tls-ca-cert-file", "/docker/tls/ca.crt",
        "--tls-auth-clients", "no",
      ]
    volumes:
      - ./docker:/docker


  redis-replica-2:
    container_name: redis-replica-2
    image: ${SERVER_IMAGE}
    network_mode: host
    command:
      [
        "redis-server",
        "--replica-announce-ip", "localhost",
        "--replicaof", "localhost", "6380",
        "--protected-mode", "no",
        "--port", "6382",
        "--tls-port", "16382",
        "--tls-cert-file", "/docker/tls/server.crt",
        "--tls-key-file", "/docker/tls/server.key",
        "--tls-ca-cert-file", "/docker/tls/ca.crt",
        "--tls-auth-clients", "no",
      ]
    volumes:
      - ./docker:/docker


  sentinel-1:
    container_name: sentinel-1
    image: ${SERVER_IMAGE}
    network_mode: host
    command: >
      sh -c 'echo "port 26379" >> /etc/sentinel.conf &&
            echo "tls-port 36379" >> /etc/sentinel.conf &&
            echo "tls-cert-file /docker/tls/server.crt" >> /etc/sentinel.conf &&
            echo "tls-key-file /docker/tls/server.key" >> /etc/sentinel.conf &&
            echo "tls-ca-cert-file /docker/tls/ca.crt" >> /etc/sentinel.conf &&
            echo "tls-auth-clients no" >> /etc/sentinel.conf &&
            echo "sentinel monitor mymaster localhost 6380 2" >> /etc/sentinel.conf &&
            echo "sentinel resolve-hostnames yes" >> /etc/sentinel.conf &&
            echo "sentinel announce-hostnames yes" >> /etc/sentinel.conf &&
            echo "sentinel announce-ip localhost" >> /etc/sentinel.conf &&
            echo "sentinel down-after-milliseconds mymaster 10000" >> /etc/sentinel.conf &&
            echo "sentinel failover-timeout mymaster 10000" >> /etc/sentinel.conf &&
            echo "sentinel parallel-syncs mymaster 1" >> /etc/sentinel.conf &&
            redis-sentinel /etc/sentinel.conf'
    volumes:
      - ./docker:/docker


  sentinel-2:
    container_name: sentinel-2
    image: ${SERVER_IMAGE}
    network_mode: host
    command: >
      sh -c 'echo "port 26380" >> /etc/sentinel.conf &&
            echo "tls-port 36380" >> /etc/sentinel.conf &&
            echo "tls-cert-file /docker/tls/server.crt" >> /etc/sentinel.conf &&
            echo "tls-key-file /docker/tls/server.key" >> /etc/sentinel.conf &&
            echo "tls-ca-cert-file /docker/tls/ca.crt" >> /etc/sentinel.conf &&
            echo "tls-auth-clients no" >> /etc/sentinel.conf &&
            echo "sentinel monitor mymaster localhost 6380 2" >> /etc/sentinel.conf &&
            echo "sentinel resolve-hostnames yes" >> /etc/sentinel.conf &&
            echo "sentinel announce-hostnames yes" >> /etc/sentinel.conf &&
            echo "sentinel announce-ip localhost" >> /etc/sentinel.conf &&
            echo "sentinel down-after-milliseconds mymaster 10000" >> /etc/sentinel.conf &&
            echo "sentinel failover-timeout mymaster 10000" >> /etc/sentinel.conf &&
            echo "sentinel parallel-syncs mymaster 1" >> /etc/sentinel.conf &&
            redis-sentinel /etc/sentinel.conf'
    volumes:
      - ./docker:/docker

  sentinel-3:
    container_name: sentinel-3
    image: ${SERVER_IMAGE}
    network_mode: host
    command: >
      sh -c 'echo "port 26381" >> /etc/sentinel.conf &&
            echo "tls-port 36381" >> /etc/sentinel.conf &&
            echo "tls-cert-file /docker/tls/server.crt" >> /etc/sentinel.conf &&
            echo "tls-key-file /docker/tls/server.key" >> /etc/sentinel.conf &&
            echo "tls-ca-cert-file /docker/tls/ca.crt" >> /etc/sentinel.conf &&
            echo "tls-auth-clients no" >> /etc/sentinel.conf &&
            echo "sentinel monitor mymaster localhost 6380 2" >> /etc/sentinel.conf &&
            echo "sentinel resolve-hostnames yes" >> /etc/sentinel.conf &&
            echo "sentinel announce-hostnames yes" >> /etc/sentinel.conf &&
            echo "sentinel announce-ip localhost" >> /etc/sentinel.conf &&
            echo "sentinel down-after-milliseconds mymaster 10000" >> /etc/sentinel.conf &&
            echo "sentinel failover-timeout mymaster 10000" >> /etc/sentinel.conf &&
            echo "sentinel parallel-syncs mymaster 1" >> /etc/sentinel.conf &&
            redis-sentinel /etc/sentinel.conf'
    volumes:
      - ./docker:/docker


  builder:
    container_name: builder
    image: ${BUILDER_IMAGE}
    tty: true
    volumes:
      - ../:/boost-redis
      - /tmp/redis-socks:/tmp/redis-socks
